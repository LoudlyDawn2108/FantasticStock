<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="gPId.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="gName.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="gCategory.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="gSupplier.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="gPrice.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="gQuantity.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="gReorderLv.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="gActions.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>